<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>mkdocs on log from home</title>
    <link>https://bemnlam.github.io/tags/mkdocs/</link>
    <description>Recent content in mkdocs on log from home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; bemnlam</copyright>
    <lastBuildDate>Fri, 12 Jun 2020 19:37:00 +0800</lastBuildDate>
    
	<atom:link href="https://bemnlam.github.io/tags/mkdocs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Documentation Makes Easy With MkDocs and GitLab Pages</title>
      <link>https://bemnlam.github.io/posts/documentation-makes-easy-with-mkdocs-and-gitlab-pages/</link>
      <pubDate>Fri, 12 Jun 2020 19:37:00 +0800</pubDate>
      
      <guid>https://bemnlam.github.io/posts/documentation-makes-easy-with-mkdocs-and-gitlab-pages/</guid>
      
        <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;I created a static website using &lt;strong&gt;MkDocs&lt;/strong&gt; and deployed to &lt;a href=&#34;https://docs.gitlab.com/ee/user/project/pages/&#34;&gt;&lt;strong&gt;GitLab Pages&lt;/strong&gt;&lt;/a&gt;. This is what I did: &lt;a href=&#34;https://bemn-proof-of-concept.gitlab.io/mkdoc/&#34;&gt;https://bemn-proof-of-concept.gitlab.io/mkdoc/&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#intro&#34;&gt;MkDocs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#preparation&#34;&gt;Preparation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#up-and-run&#34;&gt;Up and Run&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#add-a-new-page&#34;&gt;Add a new page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#theming&#34;&gt;Theming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#custom-resources&#34;&gt;Custom Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gitlab-pages&#34;&gt;GitLab Pages&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#gitlab-ci-yml&#34;&gt;.gitlab-ci.yml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#build-and-deploy&#34;&gt;Build and Deploy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conclusion&#34;&gt;Conclustion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;mkdocs-intro&#34;&gt;MkDocs {#intro}##&lt;/h2&gt;
&lt;p&gt;From &lt;a href=&#34;https://www.mkdocs.org/&#34;&gt;MkDocs&#39; official website&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MkDocs is a &lt;strong&gt;fast&lt;/strong&gt;, &lt;strong&gt;simple&lt;/strong&gt; and &lt;strong&gt;downright gorgeous&lt;/strong&gt; static site generator that&amp;rsquo;s geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In my opinion, setting up a static site using MkDocs is really straightforward. It&amp;rsquo;s easy to change the theme and insert custom styles/scripts. &lt;a href=&#34;https://en.m.wikipedia.org/wiki/KISS_principle&#34;&gt;Keep it simple, stupid&lt;/a&gt;. That&amp;rsquo;s what I need.&lt;/p&gt;
&lt;h3 id=&#34;preparation&#34;&gt;Preparation&lt;/h3&gt;
&lt;p&gt;Make sure that you have the following tools:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;python 3.x&lt;/strong&gt; and &lt;strong&gt;pip&lt;/strong&gt;. Install it via &lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;executable&lt;/a&gt; from the official website, or using tools like &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ python --version
Python 3.8.2
$ pip --version
pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;python 3.8&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;a &lt;strong&gt;GitLab&lt;/strong&gt; account. You can use other service like &lt;a href=&#34;https://pages.github.com/&#34;&gt;Github Pages&lt;/a&gt;, Amazon S3, etc.&lt;/li&gt;
&lt;li&gt;(optional) &lt;a href=&#34;https://www.markdownguide.org/cheat-sheet/&#34;&gt;a markdown cheatsheet&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(For me, the most difficult part is how to get the python and pip versions right. In Mac the built-in python version is 2.7 but we need python 3 to install &lt;code&gt;pip&lt;/code&gt;.)&lt;/p&gt;
&lt;h3 id=&#34;up-and-run&#34;&gt;Up and Run&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ pip install mkdocs
$ mkdocs --version
mkdocs, version 1.1.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Assuming that your project folder is &lt;code&gt;doc-project&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mkdocs new doc-project
$ cd doc-project
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A MkDocs project is then created with the following folder structure:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;doc-project
├── docs
│   └── index.md
├── img
│   └── favicon.ico
└── mkdocs.yml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Let&amp;rsquo;s run the site:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mkdocs serve
INFO    -  Building documentation...
INFO    -  Cleaning site directory
INFO    -  Documentation built in 1.65 seconds
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;I &lt;span style=&#34;color:#ae81ff&#34;&gt;200612&lt;/span&gt; 23:30:19 server:334&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Serving on http://127.0.0.1:8000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And check it out at &lt;a href=&#34;http://127.0.0.1:8000&#34;&gt;http://127.0.0.1:8000&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://bemnlam.github.io/img/documentation-makes-easy-with-mkdocs/01_welcome.png&#34; alt=&#34;Running MkDocs&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;add-a-new-page&#34;&gt;Add a new page&lt;/h3&gt;
&lt;h4 id=&#34;the-content&#34;&gt;The content&lt;/h4&gt;
&lt;p&gt;Remember, all the documents should place under &lt;code&gt;docs&lt;/code&gt;. Let&amp;rsquo;s create an Overview page:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ cd docs
$ touch overview.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After that, add some content to &lt;code&gt;overview.md&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&#34;the-menu&#34;&gt;The menu&lt;/h4&gt;
&lt;p&gt;If you want the visitors to reach the overview page, you need to add an url in the menu. Let&amp;rsquo;s edit &lt;code&gt;mkdocs.yml&lt;/code&gt;, the site config file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In mkdocs.yml...&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;site_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Doc Project ## change your site name here.&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;nav&lt;/span&gt;:
  - &lt;span style=&#34;color:#f92672&#34;&gt;Home&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;index.md&lt;/span&gt;
  - &lt;span style=&#34;color:#f92672&#34;&gt;Overview&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;overview.md ## add this line.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You will see a new link called &lt;em&gt;Overview&lt;/em&gt; in the menu. If you want to set your site name now, change the value of &lt;code&gt;site_name&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So that&amp;rsquo;s it. That&amp;rsquo;s how to add a new page.&lt;/p&gt;
&lt;h3 id=&#34;theming&#34;&gt;Theming&lt;/h3&gt;
&lt;p&gt;You can apply a custom theme to MkDocs. &lt;a href=&#34;https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes&#34;&gt;This page&lt;/a&gt; contains many themes contributed by the community.&lt;/p&gt;
&lt;p&gt;In this section, I will apply the &lt;a href=&#34;https://github.com/squidfunk/mkdocs-material&#34;&gt;Material Design theme&lt;/a&gt; to my MkDocs site.&lt;/p&gt;
&lt;p&gt;Stop running your site and install the theme by:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ pip install mkdocs-material
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Update the &lt;code&gt;mkdocs.yml&lt;/code&gt; again:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In mkdocs.yml...&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;site_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Doc Project&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;nav&lt;/span&gt;:
  - &lt;span style=&#34;color:#f92672&#34;&gt;Home&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;index.md&lt;/span&gt;
  - &lt;span style=&#34;color:#f92672&#34;&gt;Overview&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;overview.md&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## Add this section&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;theme&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;material&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;palette&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;## Add this sub-section if you want to change the theme color&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;scheme&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;amber&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;primary&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;amber&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;accent&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;orange&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Start the site:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mkdocs serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You will see MkDocs is dressing the amber Material Design theme.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://bemnlam.github.io/img/documentation-makes-easy-with-mkdocs/02_theming.png&#34; alt=&#34;Material Design theme with amber scheme&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;custom-resources&#34;&gt;Custom Resources&lt;/h3&gt;
&lt;p&gt;Sometimes you may want to add custom CSS or JS. In MkDocs, you can do it by adding &lt;code&gt;extra_css&lt;/code&gt; and &lt;code&gt;extra_javascript&lt;/code&gt; sections in &lt;code&gt;mkdocs.yml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I created a &lt;code&gt;catalog&lt;/code&gt; page which contains a table written in markdown. Also, I want to apply &lt;a href=&#34;https://www.datatables.net/&#34;&gt;jQuery DataTables&lt;/a&gt; to make the table more interactive. Therefore, I added the related js libraries and related css file to MkDocs. You can see the result &lt;a href=&#34;https://bemn-proof-of-concept.gitlab.io/mkdoc/catalog/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Exercice:&lt;/strong&gt; create a &lt;code&gt;catalog.md&lt;/code&gt; file and add a markdown table in it.&lt;/p&gt;
&lt;p&gt;Next, add the custom resource sections to the config file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In mkdocs.yml...&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;site_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Doc Project&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;nav&lt;/span&gt;:
  - &lt;span style=&#34;color:#f92672&#34;&gt;Home&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;index.md&lt;/span&gt;
  - &lt;span style=&#34;color:#f92672&#34;&gt;Catalog&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;catalog.md ## The catalog page you created in the exercise.&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;theme&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;material&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;palette&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;scheme&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;amber&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;primary&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;amber&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;accent&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;orange&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## Custom js files.&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;extra_javascript&lt;/span&gt;:
  - &lt;span style=&#34;color:#ae81ff&#34;&gt;https://code.jquery.com/jquery-3.5.1.min.js&lt;/span&gt;
  - &lt;span style=&#34;color:#ae81ff&#34;&gt;https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js&lt;/span&gt;
  - &lt;span style=&#34;color:#ae81ff&#34;&gt;scripts/site.js&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;## Custom css files.&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;extra_css&lt;/span&gt;:
  - &lt;span style=&#34;color:#ae81ff&#34;&gt;https://cdn.datatables.net/1.10.21/css/jquery.dataTables.min.css&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create a custom js file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ cd docs
$ mkdir scripts
$ cd scripts
$ touch site.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now in your &lt;code&gt;site.js&lt;/code&gt; file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;$&lt;/span&gt;(document).&lt;span style=&#34;color:#a6e22e&#34;&gt;ready&lt;/span&gt;( &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; () {
    &lt;span style=&#34;color:#a6e22e&#34;&gt;$&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;table&amp;#39;&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;DataTable&lt;/span&gt;();
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Afer that, you should be able to see an interactive table in the catalog page.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://bemnlam.github.io/img/documentation-makes-easy-with-mkdocs/03_with-custom-resources.png&#34; alt=&#34;With jQuery Datatables&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;gitlab-pages&#34;&gt;GitLab Pages&lt;/h2&gt;
&lt;p&gt;Create a GitLab repository under your personal space or a project group. The url will be something like &lt;code&gt;https://gitlab.com/{username or project group name}/{repo name}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Clone the repo you created and create the following items:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mkdir src
$ touch .gitlab-ci.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Place your MkDoc items (i.e. the &lt;code&gt;doc-project&lt;/code&gt; folder) under &lt;code&gt;src&lt;/code&gt;. See the following folder structure:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(root of the repo)
├── .gitlab-ci.yml
└── src
    └── doc-project
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;gitlab-ci-yml&#34;&gt;.gitlab-ci.yml&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; is a GitLab-specific file. GitLab will read and run the steps in the file. We need to tell GitLab how to generate and deploy our static MkDocs website. In this file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# In .gitlab-ci.yml...&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;python:3.8-buster ## MkDocs requies python.&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;pages&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;stage&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;deploy ## tell GitLab to deploy the website in this step.&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;before_script&lt;/span&gt;:
    - &lt;span style=&#34;color:#ae81ff&#34;&gt;pip install mkdocs ## install MkDocs.&lt;/span&gt;
    - &lt;span style=&#34;color:#ae81ff&#34;&gt;pip install mkdocs-material ## install the theme.&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;:
    - &lt;span style=&#34;color:#ae81ff&#34;&gt;cd ./src/doc-project&lt;/span&gt;
    - &lt;span style=&#34;color:#ae81ff&#34;&gt;mkdocs build ## built the site.&lt;/span&gt;
    - &lt;span style=&#34;color:#ae81ff&#34;&gt;mv site ../../public&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;artifacts&lt;/span&gt;:
    &lt;span style=&#34;color:#f92672&#34;&gt;paths&lt;/span&gt;:
    - &lt;span style=&#34;color:#ae81ff&#34;&gt;public&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;## Uncomment the following section if you want to run this step under master branch only.&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# only:&lt;/span&gt;
  &lt;span style=&#34;color:#75715e&#34;&gt;# - master &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So basically it tells GitLab to install the tools required under python 3.8 environment and deploy the website after the site is generated.&lt;/p&gt;
&lt;p&gt;Try to run the following command if you want to generate the site locally:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;$ mkdocs build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The generated site is located under  &lt;code&gt;doc-project/site/&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;In order to display the website properly, you need to place the generated site under the &lt;code&gt;public&lt;/code&gt; folder and let GitLab knows the &lt;strong&gt;artifact&lt;/strong&gt; inside is the website you want to deploy.&lt;/p&gt;
&lt;h3 id=&#34;build-and-deploy&#34;&gt;Build and Deploy&lt;/h3&gt;
&lt;p&gt;Push the code to GitLab and the site should build automatically. Check out the status of the build under &lt;strong&gt;CI/CD&lt;/strong&gt; &amp;ndash;&amp;gt;  &lt;strong&gt;Pipelines&lt;/strong&gt;.&lt;/p&gt;
&lt;figure&gt;
    &lt;img src=&#34;https://bemnlam.github.io/img/documentation-makes-easy-with-mkdocs/04_gitlab-ci-cd-panel.png&#34;
         alt=&#34;CI/CD panel in GitLab&#34;/&gt; &lt;figcaption&gt;
            &lt;h4&gt;A green tag showing passed for each successfully build.&lt;/h4&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Check out your website now. The url is &lt;code&gt;https://{username or project group name}.gitlab.io/{repo name}/&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this tutorial, we created a static site with custom theme, styles and js library by using MkDocs. After that, we set up a CI/CD pipeline on GitLab for building and deploying this static site to GitLab Pages.&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
